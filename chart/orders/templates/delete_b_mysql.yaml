apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Chart.Name}}-delete-mysql-{{.Release.Name}}"
  labels:
    app: bluecompute
    micro: orders
    tier: backend
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "21"
spec:
  template:
    metadata:
      name: "{{.Chart.Name}}-delete-mysql-{{.Release.Name}}"
      labels:
        app: bluecompute
        micro: orders
        tier: backend
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      restartPolicy: Never
      containers:
      - name: delete-mysql
        image: ibmcase/bluemix-cluster-deployer:latest
        command: [ "/bin/bash", "-c" ]
        args: ["if [[ \"{{ .Values.mysql.skipDelete }}\" == \"true\" ]]; then \
          echo \"Skipping\"; \
          exit 0; \
        fi; \
        source /scripts/bx_login.sh; set -x; bx cs init; \
        bx cs cluster-service-unbind ${KUBE_CLUSTER_NAME} {{ .Release.Namespace }} {{ .Values.mysql.serviceName }}; \
        bx service delete {{ .Values.mysql.serviceName }} -f || \
        echo \"{{ .Values.mysql.serviceName }} already deleted\""]
        imagePullPolicy: IfNotPresent
        env:
        - name: BX_API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: bluemix-target
              key: bluemix-api-endpoint
        - name: BLUEMIX_API_KEY
          valueFrom:
            secretKeyRef:
              name: bluemix-api-key
              key: api-key
        - name: BX_SPACE
          valueFrom:
            configMapKeyRef:
              name: bluemix-target
              key: bluemix-space
        - name: KUBE_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: bluemix-target
              key: kube-cluster-name